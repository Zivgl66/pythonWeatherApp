# Eks - after terraform apply:
$ aws eks update-kubeconfig --region <region-code> --name <my-cluster>


# Image pull secret for private docker registry:
$ kubectl create secret docker-registry docker-hub-cred --docker-server=docker.io --docker-username=<username> --docker-password=<password> --docker-email=<email>


# Helm chart install to apply k8s manifest:
$ helm install <release-name> <chart path>


# Kubectl reapply a deployment:
$ kubectl rollout restart deployment/<deployment name>
$ kubectl get pods -n kube-system
$ kubectl get deployment -n kube-system

# Annotate a serviceaccount with the matching policy
$ kubectl annotate serviceaccount aws-load-balancer-controller -n kube-system   eks.amazonaws.com/role-arn=arn:aws:iam::107895200189:policy/AWSLoadBalancerControllerIAMPolicy


# Aws-load-balancer-controller installation:
$ helm repo add eks https://aws.github.io/eks-charts
$ helm repo update
$ helm install aws-load-balancer-controller eks/aws-load-balancer-controller   -n kube-system   --set clusterName=pc-eks --set region=us-east-1  --set vpcId=vpc-04471717bbb9c6b64
$ kubectl rollout restart deployment aws-load-balancer-controller -n kube-system


# EBS use:
$ helm install aws-ebs-csi-driver aws-ebs-csi-driver/aws-ebs-csi-driver --namespace kube-system --set controller.serviceAccount.create=true --set controller.serviceAccount.name=ebs-csi-controller-sa

Policy to add to the eks node_group:
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "ec2:AttachVolume",
                "ec2:CreateVolume",
                "ec2:DeleteVolume",
                "ec2:DetachVolume",
                "ec2:DescribeVolumes",
                "ec2:DescribeVolumeStatus",
                "ec2:DescribeVolumeAttribute",
                "ec2:ModifyVolume",
                "ec2:CreateTags"
            ],
            "Resource": "*"
        }
    ]
}

